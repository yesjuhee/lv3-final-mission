import org.asciidoctor.gradle.jvm.AsciidoctorTask

plugins {
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'nextstep'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    asciidoctorExt
}

ext {
    snippetsDir = file('build/generated-snippets')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-gson:0.11.2'

    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured:5.3.1'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // rest docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.named('test', Test) {
    useJUnitPlatform()
    outputs.dir snippetsDir

    doFirst {
        delete snippetsDir
    }
}

tasks.named('asciidoctor', AsciidoctorTask) {
    configurations 'asciidoctorExt'
    dependsOn test
    inputs.dir snippetsDir
    outputDir = file('src/main/resources/static/docs')
    sources {
        include('**/index.adoc')
    }
    baseDirFollowsSourceFile()
    doFirst {
        delete outputDir
    }
}

bootJar {
    from('${asciidoctor.outputDir}') {
        into 'static/docs'
    }
}

tasks.named('build') {
    dependsOn asciidoctor
}
